#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define GAME    1
#define NUM     2
#define FUNC    3
#define LOCK    4

#define COMBO(name, kp, pos) \
combo_##name {               \
    timeout-ms    = <30>;    \
    bindings      = <kp>;    \
    key-positions = <pos>;   \
    layers        = <0 1>;   \
};
/* Key positions
 0  1  2  3  4  5 48       60  6  7  8  9 10 11
12 13 14 15 16 17 49       59 18 19 20 21 22 23
24 25 26 27 28 29 50       57 30 31 32 33 34 35
36 37 38 39 40 41 51       56 42 43 44 45 46 47
         61 62 63             70 71 72
             65 66 52     55 67 68
            64       53  54       69
*/


/ {
    combos {
        compatible = "zmk,combos";
        COMBO(boot,   &bootloader,   11 47)
        COMBO(autotype,&kp LC(LA(A)),24 25)
        COMBO(grve, &kp GRAVE,       17 49)
        COMBO(sqot, &kp SQT,         29 50)
        COMBO(game, &tog GAME,       11 23)
        COMBO(deskr, &kp LG(END),    55 70)
        COMBO(deskl, &kp LG(HOME),   54 55)
        COMBO(lock,  &tog LOCK,      33 45)
    };
};

/ {
    macros {
        sap_cp: sap_cp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp LC(F11)>
                , <&macro_pause_for_release>
                , <&kp LC(F12)>
                ;
        };
        grve: grve {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp GRAVE>
                , <&kp SPACE>
                ;
        };
        sqot: sqot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp SQT>
                , <&kp SPACE>
                ;
        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                    display-name = "Default";
                        bindings = <
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   ESC   |    1    |    2    |    3    |    4    |    5    |               |    6    |    7    |    8    |    9    |    0    |    -    |
    &kp ESC    &kp N1    &kp N2   &kp N3    &kp N4    &kp N5                    &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS
// |   DEL   |    Q    |    W    |    E    |    R    |    T    |               |    Y    |    U    |    I    |    O    |    P    |    [    |
    &kp DEL    &kp Q     &kp W     &kp E     &kp R     &kp T                     &kp Y      &kp U     &kp I     &kp O     &kp P     &kp LBKT
// |   HOME  |    A    |    S    |    D    |    F    |    G    |               |    H    |    J    |    K    |    L    |    ;    |    ]    |
    &kp HOME   &kp A     &kp S     &kp D     &kp F     &kp G                     &kp H      &kp J     &kp K     &kp L     &kp SEMI  &kp RBKT
// |   END   |    Z    |    X    |    C    |    V    |    B    |               |    N    |    M    |    ,    |    .    |    /    |    F9   |
    &kp END    &kp Z     &kp X     &kp C     &kp V     &kp B                     &kp N      &kp M     &kp COMMA &kp DOT   &kp SLASH &kp F9  
// |   F5    |    `    |    '    |    \    |    TAB  |    FL   |               |    NL   | ALT/TAB |    Ü    |    Ö    |    Ä    |    +    |
    &kp F5      &grve     &sqot    &kp BSLH  &kp TAB   &mo FUNC                  &tog NUM &kp LA(TAB) &kp RA(Y) &kp RA(P) &kp RA(Q) &kp EQUAL
// | ALT/ENT |   BSPC  |   SPC   |   LSHFT |    LCTL | WIN/TAB |               |   CAPS  |   RALT  |   RSHFT |    ENT  |   SPC   |    WIN  |
&mt LALT ENTER &kp BSPC  &kp SPACE &kp LSHFT &kp LCTRL &kp LG(TAB)               &kp CAPS  &kp RALT &caps_word &kp ENTER &kp SPACE &kp RGUI
                                >;
                        };
                game_layer {
                    display-name = "Game";
                        bindings = <
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |         |         |         |         |         |         |               |         |         |         |         |         |         |
     &trans    &trans    &trans    &trans    &trans    &trans                    &trans    &trans    &trans    &trans    &trans    &trans
// |         |         |         |         |         |         |               |         |   UP    |         |         |         |         |
     &trans    &trans    &trans    &trans    &trans    &trans                    &trans    &kp UP    &trans    &trans    &kp UP    &trans
// |         |         |         |         |         |         |               |   LEFT  |  DOWN    |  RIGHT |         |         |         |
     &kp I     &trans    &trans    &trans    &trans    &trans                    &kp LEFT  &kp DOWN  &kp RIGHT  &trans   &trans    &trans
// |         |         |         |         |         |         |               |         |         |         |         |         |         |
     &kp M     &trans    &trans    &trans    &trans    &trans                    &trans    &trans    &trans    &trans    &trans    &trans
// |         |         |         |         |         |         |               |         |  SPACE  |         |         |         |         |
     &kp N6    &kp N7    &kp N8    &kp N9    &trans    &trans                    &trans    &kp SPACE  &trans    &trans    &trans    &trans
// |         |         |         |         |         |         |               |         |         |         |         |         |         |
     &trans    &trans    &trans    &trans    &trans    &trans                    &trans    &trans    &trans    &trans    &trans    &trans
                                >;
                        };
                num_layer {
                    display-name = "Numblock";
                        bindings = <
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |         |         |         |         |         |         |               |         |         |    *    |    /    |         |         |
     &trans    &trans    &trans    &trans    &trans    &trans                    &trans    &trans &kp KP_ASTERISK &kp KP_DIVIDE &trans &trans
// |         |         |         |         |         |         |               |    7    |    8    |    9    |    -    |         |         |
     &trans    &trans    &trans    &trans    &trans    &trans                   &kp KP_N7  &kp KP_N8 &kp KP_N9 &kp KP_PLUS &trans  &trans
// |         |         |         |         |         |         |               |    4    |    5    |    6    |    +    |         |         |
     &trans    &trans    &trans    &trans    &trans    &trans                   &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_MINUS &trans &trans
// |         |         |         |         |         |         |               |    1    |    2    |    3    |         |         |         |
     &trans    &trans    &trans    &trans    &trans    &trans                   &kp KP_N1  &kp KP_N2 &kp KP_N3 &trans    &trans    &trans
// |         |         |         |         |         |         |               |         |         |         |         |         |         |
     &trans    &trans    &trans    &trans    &trans    &trans                    &trans    &trans    &trans    &trans    &trans    &trans
// |         |         |         |         |         |         |               |         |         |         |         |    0    |    .    |
     &trans    &trans    &trans    &trans    &trans    &trans                    &trans    &trans    &trans    &trans   &kp KP_N0 &kp KP_DOT
                                >;
                        };
                func_layer {
                    display-name = "Function";
                        bindings = <
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// | BT CLR ALL | F1   |    F2   |    F3   |    F4   |    F5   |               |    F6   |    F7   |    F8   |    F9   |    F10  |    F11  |
    &bt BT_CLR_ALL &kp F1 &kp F2    &kp F3    &kp F4    &kp F5                    &kp F6     &kp F7    &kp F8    &kp F9    &kp F10   &kp F11
// | BT CLR  |         |    UP   |         |         |         |               |         |         |         |         |         |    F12  |
    &bt BT_CLR  &trans   &kp UP    &trans    &trans    &trans                    &trans    &trans    &trans    &trans    &trans    &kp F12
// |   VOLUP |   LEFT  |   DOWN  |  RIGHT  |         |         |               |         |         |         |         |         |   USB   |
    &kp K_VOL_UP &kp LEFT  &kp DOWN  &kp RIGHT &trans  &trans                    &trans    &trans    &trans    &trans    &trans  &out OUT_USB
// |  VOLDWN |         |         |         |         |CTLF11 12|               |  BLE 1  |  BLE 2  |  BLE 3  |         |         | BLUETOOTH |
    &kp K_VOL_DN &trans  &trans    &trans    &trans    &sap_cp                &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &trans &trans &out OUT_BLE
// |   PAUSE |   WHOM  |SFT GUI S|   PSCR  |         |         |               |   LEFT  |   UP    |         |         |         |         |
    &kp PAUSE_BREAK &kp K_WWW &kp LS(LG(S)) &kp PSCRN &trans &trans             &kp LEFT   &kp UP    &trans    &trans    &trans    &trans
// |         |         |         |         |         |         |               |   DOWN  |         |   NUM   |   RIGHT |  BLE 0  |         |
     &trans    &trans    &trans    &trans    &trans    &trans                   &kp DOWN   &trans  &kp KP_NUM &kp RIGHT &bt BT_SEL 0 &trans
                                >;
                        };
                lock_layer {
                    display-name = "Keyboard lock";
                        bindings = <
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |         |         |         |         |         |         |               |         |         |         |         |         |         |
     &none     &none     &none     &none     &none     &none                     &none     &none     &none     &none     &none     &none
// |         |         |         |         |         |         |               |         |         |         |    -    |         |         |
     &none     &none     &none     &none     &none     &none                     &none     &none     &none     &none     &none     &none
// |         |         |         |         |         |         |               |         |         |         |         |         |         |
     &none     &none     &none     &none     &none     &none                     &none     &none     &none     &trans    &none     &none
// |         |         |         |         |         |         |               |         |         |         |         |         |         |
     &none     &none     &none     &none     &none     &none                     &none     &none     &none     &trans    &none     &none
// |         |         |         |         |         |         |               |         |         |         |         |         |         |
     &none     &none     &none     &none     &none     &none                     &none     &none     &none     &none     &none     &none
// |         |         |         |         |         |         |               |         |         |         |         |         |         |
     &none     &none     &none     &none     &none     &none                     &none     &none     &none     &none     &none     &none
                                >;
                        };
        };

};
